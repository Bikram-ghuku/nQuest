<html>
    <head>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz" crossorigin="anonymous"></script>
        <title>Test On Going</title>
        <script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
        <script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@2/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
        <link rel="stylesheet" type="text/css" href="css/testOnGoing.css">
        <script type="module" src="js/testOnGoing.js"></script>
        <script>
            

            function  section_act(x){
                var grp_btns = document.getElementsByClassName("grp_btn")
                Array.prototype.forEach.call(grp_btns, (item)=>{
                    item.classList = "grp_btn"
                })
                document.getElementById("group_"+x).classList+=" current_active_group";


                qpaper = localStorage.getItem("qpaper")
                qpaper = JSON.parse(qpaper)
                var section = qpaper.data[x].sections

                var section_div = document.getElementsByClassName("sections")[0]
                section_div.innerHTML=""
                section.forEach((item)=>{
                    
                    section_div.innerHTML+="<div class=\"sec_btn_cover\" ><button class=\"sec_btn\" id=\"section_"+item.id+"\" onClick=\"ques_act(\'"+item.id+"\', \'"+x+"\')\">"+item.section+"</button></div>"
                })

                ques_act(qpaper.data[x].sections[0].id , x)
            }

            function  ques_act(sect_act, grp_act){
                var grp_btns = document.getElementsByClassName("sec_btn")
                Array.prototype.forEach.call(grp_btns, (item)=>{
                    item.classList = "sec_btn"
                })
                document.getElementById("section_"+sect_act).classList+=" current_active_group";

                var s = sect_act.split("_")
                sect_act_index = parseInt(s[2])-1
                
                qpaper = localStorage.getItem("qpaper")
                qpaper = JSON.parse(qpaper)

                section_data = qpaper.data[grp_act].sections[sect_act_index]

                num_questions = qpaper.data[grp_act].sections[sect_act_index].num_ques
                

                
                document.getElementsByClassName("sep_top_bot")[0].innerHTML = section_data.section
                document.getElementsByClassName("q_type")[0].innerHTML = "Question Type: "+section_data.q_type
                document.getElementsByClassName("q_scoring")[0].innerHTML = "Marks For Correct Answer: <font style=\"color: green;\">"+section_data.score[0]+"</font> | Marks For Incorrect: <font style=\"color: red;\">"+section_data.score[1]+"</font>"
                update_nav(grp_act, sect_act_index)
                showQuestion(grp_act, sect_act_index, 0)
                

            }

            function update_nav(grp_act, sect_act_index){

                qpaper = localStorage.getItem("qpaper")
                qpaper = JSON.parse(qpaper)

                document.getElementsByClassName("navigation")[0].innerHTML = ""

                num_questions = qpaper.data[grp_act].sections[sect_act_index].num_ques
                
                for(i=0; i<num_questions; i++){
                    x=""
                    if(section_data.viewed.includes(i)){
                        x="na_button"
                    }
                    else if(section_data.answered.includes(i)){
                        x="a_button"
                    }
                    else if(section_data.mfr.includes(i)) {
                        x="mfr_button"
                    }
                    else if(section_data.amfr.includes(i)){
                        x="amfr_button"
                    }
                    nav_elem = "<div class=\"nav_elem_cover\"><button class=\"nav_elem "+x+"\" id=\"nav_btn_"+grp_act+sect_act_index+i+"\" onClick=\"showQuestion('"
                        +grp_act+
                        "','"
                        +sect_act_index+
                        "','"
                        +i+
                        "')\">"
                        +(i+1)+
                        "</button></div>"
                    document.getElementsByClassName("navigation")[0].innerHTML+=nav_elem
                }

            }

            

            function showQuestion(act_grp, act_sec, q_no){
                
                MathJax.Hub.Queue(["Typeset",MathJax.Hub]);
                MathJax.Hub.Queue(["Typeset",MathJax.Hub]);

                qpaper_ques = JSON.parse(localStorage.getItem("questions"))

                qpaper = localStorage.getItem("qpaper")
                qpaper = JSON.parse(qpaper)
                con_check_1 = !qpaper.data[act_grp].sections[act_sec].viewed.includes(parseInt(q_no))
                con_check_2 =  !qpaper.data[act_grp].sections[act_sec].answered.includes(parseInt(q_no))
                con_check_3 = !qpaper.data[act_grp].sections[act_sec].mfr.includes(parseInt(q_no))
                con_check_4 = !qpaper.data[act_grp].sections[act_sec].amfr.includes(parseInt(q_no))
                if(con_check_1 && con_check_2 && con_check_3 && con_check_4){
                    qpaper.data[act_grp].sections[act_sec].viewed.push(parseInt(q_no))
                    document.getElementById("nav_btn_"+act_grp+act_sec+q_no).classList = "nav_elem "
                    document.getElementById("nav_btn_"+act_grp+act_sec+q_no).classList+="na_button "
                }

                localStorage.setItem("qpaper", JSON.stringify(qpaper))

                qpaper = localStorage.getItem("qpaper")
                qpaper = JSON.parse(qpaper)

                num_questions = qpaper.data[act_grp].sections[act_sec].num_ques
                num_ans = qpaper.data[act_grp].sections[act_sec].answered.length
                num_viewed = qpaper.data[act_grp].sections[act_sec].viewed.length
                num_mfr = qpaper.data[act_grp].sections[act_sec].mfr.length
                num_amfr = qpaper.data[act_grp].sections[act_sec].amfr.length

                document.getElementsByClassName("nans")[0].innerHTML = num_viewed
                document.getElementsByClassName("ans")[0].innerHTML = num_ans
                document.getElementsByClassName("nvisit")[0].innerHTML = num_questions - num_ans - num_viewed - num_mfr - num_amfr
                document.getElementsByClassName("mfr")[0].innerHTML = num_mfr
                document.getElementsByClassName("amfr")[0].innerHTML = num_amfr
                
                var index = 0
                ques_id_qpaper = qpaper.data[act_grp].sections[act_sec].questions[q_no]
                for(i=0; i<qpaper_ques.length; i++){
                    if(qpaper_ques[i].id==ques_id_qpaper){
                        index = i
                    }
                }
                document.getElementsByClassName("q_no")[0].innerHTML = "Question No. "+(parseInt(q_no)+1)
                document.getElementsByClassName("question")[0].innerHTML = qpaper_ques[index].question //question loaded here

                var response_divs = ""
                
                var num_opt = parseInt(qpaper.data[act_grp].sections[act_sec].num_opt)
                if(qpaper.data[act_grp].sections[act_sec].q_type=="SMCQ"){
                    for(i=0; i<num_opt; i++){
                        response_divs+="<div class=\"opt_divs\"><input type=\"radio\" name=\"question_"
                            +act_grp+"_"+act_sec+"_"+q_no+
                            "\" id=\"opt_"
                            +(i+1)+
                            "\" required>"
                            +qpaper_ques[index].options[i]+
                            "</div>"
                    }
                }
                else if(qpaper.data[act_grp].sections[act_sec].q_type=="MMCQ"){
                    for(i=0; i<num_opt; i++){
                        response_divs+="<div class=\"opt_divs\"><input type=\"checkbox\" name=\"question_"
                            +act_grp+"_"+act_sec+"_"+q_no+
                            "\" id=\"opt_"
                            +(i+1)+
                            "\">"
                            +qpaper_ques[index].options[i]+
                            "</div>"
                    }
                }
                else if(qpaper.data[act_grp].sections[act_sec].q_type=="integer"){
                        response_divs+="<div class=\"opt_divs\"><input type=\"number\" min=\"0\" max=\""+(num_opt-1)+"\" name=\"question_"
                            +act_grp+"_"+act_sec+"_"+q_no+
                            "\" required></div>"
                }

                // handle click of clear response
                document.getElementsByClassName("clr_res")[0].onclick = () => {
                    for(i=0; i<qpaper.data[act_grp].sections[act_sec].num_opt; i++){
                        document.getElementById("opt_"+(i+1)).checked = false
                    }

                    x = qpaper.data[act_grp].sections[act_sec].answered

                    if(x.indexOf(parseInt(q_no))>-1){
                        x.splice(x.indexOf(parseInt(q_no)), 1)
                        if(!qpaper.data[act_grp].sections[act_sec].viewed.includes(parseInt(q_no))){
                            qpaper.data[act_grp].sections[act_sec].viewed.push(parseInt(q_no))
                            document.getElementById("nav_btn_"+act_grp+act_sec+q_no).classList = "nav_elem "
                            document.getElementById("nav_btn_"+act_grp+act_sec+q_no).classList+="na_button "
                        }
                        localStorage.setItem("qpaper", JSON.stringify(qpaper))
                    }

                }

                document.getElementsByClassName("response")[0].innerHTML = response_divs
                
                
                //Handle click of save and next
                document.getElementsByClassName("next")[0].onclick = () => {
                    //store data for radio and checkbox
                    x = qpaper.data[act_grp].sections[act_sec].viewed

                    var ele = document.getElementsByName("question_"+act_grp+"_"+act_sec+"_"+q_no)
                    var resp = ""
                    if(ele[0].type=="radio"||ele[0].type=="checkbox"){
                        var checked = false
                        for(i=0; i<ele.length; i++){
                            if(ele[i].checked){
                                resp+=ele[i].id+", "
                                checked = true
                            }
                        }
                    }
                    else{
                        //store data for numeric datatype with min and max value
                        if(parseInt(ele[0].value)<=parseInt(ele[0].max) && parseInt(ele[0].value)>=parseInt(ele[0].min)){
                            resp = ele[0].value
                            checked = true

                        }
                        else{
                            
                            alert("Please enter a value within the limit in question no: "+(parseInt(q_no)+1)+ " Response not recorded")
                        }
                    }

                    if(checked){
                        var resp_store = JSON.parse(localStorage.getItem("response"))
                        var data = new Object()
                        data.id = act_grp+"_"+act_sec+"_"+q_no
                        data.value = resp
                        if(resp_store.length!=0){
                            for(i=0; i<resp_store.length; i++){
                                if(resp_store[i].id!=act_grp+"_"+act_sec+"_"+q_no){
                                    resp_store.push(data)
                                    break
                                }
                                else{
                                    resp_store[i].value = resp
                                    break
                                }
                            }
                        }else{
                            resp_store.push(data)
                        }
                        localStorage.setItem("response", JSON.stringify(resp_store))
                        
                        if(x.indexOf(parseInt(q_no))>-1){
                            x.splice(x.indexOf(parseInt(q_no)), 1)
                            if(!qpaper.data[act_grp].sections[act_sec].answered.includes(parseInt(q_no))){
                                qpaper.data[act_grp].sections[act_sec].answered.push(parseInt(q_no))
                                document.getElementById("nav_btn_"+act_grp+act_sec+q_no).classList = "nav_elem "
                                document.getElementById("nav_btn_"+act_grp+act_sec+q_no).classList+="a_button "
                            }
                            localStorage.setItem("qpaper", JSON.stringify(qpaper))
                        }
                    }
                    if(parseInt(qpaper.data[act_grp].sections[act_sec].num_ques)>parseInt(q_no)+1){
                        showQuestion(act_grp, act_sec, parseInt(q_no)+1)
                        
                    }
                }


                //handle click of marked for review
                document.getElementsByClassName("review")[0].onclick = () => {
                    
                    x = qpaper.data[act_grp].sections[act_sec]

                    if(x.viewed.indexOf(parseInt(q_no))>-1){
                        x.viewed.splice(x.viewed.indexOf(parseInt(q_no)), 1)
                        if(!qpaper.data[act_grp].sections[act_sec].mfr.includes(parseInt(q_no))){
                            qpaper.data[act_grp].sections[act_sec].mfr.push(parseInt(q_no))
                            document.getElementById("nav_btn_"+act_grp+act_sec+q_no).classList = "nav_elem "
                            document.getElementById("nav_btn_"+act_grp+act_sec+q_no).classList+="mfr_button "
                        }
                        
                    }if(x.answered.indexOf(parseInt(q_no))>-1){
                        x.answered.splice(x.answered.indexOf(parseInt(q_no)), 1)
                        if(!qpaper.data[act_grp].sections[act_sec].amfr.includes(parseInt(q_no))){
                            qpaper.data[act_grp].sections[act_sec].amfr.push(parseInt(q_no))
                            document.getElementById("nav_btn_"+act_grp+act_sec+q_no).classList = "nav_elem "
                            document.getElementById("nav_btn_"+act_grp+act_sec+q_no).classList+="amfr_button "
                        }
                    }
                    
                    localStorage.setItem("qpaper", JSON.stringify(qpaper))

                    if(parseInt(qpaper.data[act_grp].sections[act_sec].num_ques)>parseInt(q_no)+1){
                        showQuestion(act_grp, act_sec, parseInt(q_no)+1)
                        
                    }
                }
            }

            function run_timer(){

                qpaper = localStorage.getItem("qpaper")
                qpaper = JSON.parse(qpaper)
                if(qpaper.lfq){
                    section_act(0)
                }

                var end = new Date().getTime()+parseInt(qpaper.timer)*1000

                setInterval(()=>{
                    var now = new Date().getTime()
                    var distance = end - now
                    distance = Math.floor(distance/1000)
                    minutes = Math.floor(distance/60)
                    seconds = Math.floor(distance%60)
                    if(distance>60){
                        document.getElementsByClassName("Timer")[0].innerHTML = "Time Left: "+minutes+":"+seconds
                    }
                    else{
                        document.getElementsByClassName("Timer")[0].innerHTML = "Time Left: <font style=\"color:red;\">"+minutes+":"+seconds
                    }

                }, 1000)
            }
            
            


        </script>
    </head>

    <body onload="run_timer()" > 
        <!-- oncontextmenu="return false;" -->
        <div class="top_black"></div>
        <div class="right">
            <div class="profile">
                <img src="./images/app_photo.jpg" alt="Application Photo" class="images">
                <img src="./images/reg_photo.jpg" alt="Registration Photo" class="images">
            </div>
            <div class="help">
                <div class="h_ele_t">
                    <div class="ans">0</div> Answered
                </div>
                <div class="h_ele_t">
                    <div class="nans">0</div> Not Answered
                </div>
                <div class="h_ele">
                    <div class="nvisit">0</div> Not Visited
                </div>
                <div class="h_ele"> 
                    <div class="mfr">0</div> Marked For review
                </div>
                <div class="h_ele">
                    <div class="amfr">0</div> Answered & Marked For review
                </div>
            </div>
            <div class="sep_top_bot"></div>
            <div class="navigation"></div>
            <div class="btn_cont">
                <button class="submit">SUBMIT</button>
            </div>
        </div>
        <div class="main_area">
            <div class="groups">
            </div>
            <div class="sec_time">
                <font style="font-size: 2vh; font-weight: 600;">Sections</font>
                <div class="timer" style="height:2vh; font-size: 2vh; float: right; font-weight: bolder;">Time Left: </div>
                
            </div>
            <div class="sections">
            </div>
            <div class="q_info">
                <div class="q_type"></div>
                <div class="q_scoring"></div>
            </div>
            <div class="lang_sel">
            </div>
            <div class="q_no">
                
            </div>
            <div class="q_area">
                <div class="watermarked" data-watermark=""></div>
                <script> 
                    qpaper = localStorage.getItem("qpaper")
                    qpaper = JSON.parse(qpaper)    
                    Array.from(document.querySelectorAll('.watermarked')).forEach(function(el) {
                        el.dataset.watermark = (qpaper.user_id+ '  ').repeat(500);
                    });
                 </script>
                <div class="question"></div>
                <div class="alert_div" role="alert"></div>
                <div class="response"></div>
                
            </div>
            <div class="nav_btns">
                <button class="review">Mark for review and next</button>
                <button class="clr_res">Clear Response</button>
                <div class="save_next_btn">
                    <button class="next">Save and Next</button>
                </div>
            </div>
        </div>


    </body>

</html>